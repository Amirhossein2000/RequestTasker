version: "3"

dotenv: ['.env']

# TODO: Descriptions

tasks:
  generate-api:
    cmds:
      - oapi-codegen -generate types,server,strict-server,spec -package api ./openapi/api.yml > ./internal/app/api/api.gen.go
  generate-mock:
    cmds:
      - go generate ./...
  build:
    cmds:
      - go build -o ./bin ./cmd/
  test-db:
    cmds:
      - go test -v -count=1 github.com/Amirhossein2000/RequestTasker/internal/infrastructures/mysql
  test-usecase:
    cmds:
      - go test -v -count=1 github.com/Amirhossein2000/RequestTasker/internal/app/usecases
  test-kafka:
    cmds:
      - go test -v -count=1 github.com/Amirhossein2000/RequestTasker/internal/infrastructures/kafka
  test-api:
    cmds:
      - go test -v -count=1 github.com/Amirhossein2000/RequestTasker/internal/app/api/handlers
  test:
    - task: test-db
    - task: test-usecase
    - task: test-kafka
    - task: test-api
  dep-up:
    cmds:
      - docker compose --env-file .env -f dep/docker-compose.yml up -d
  dep-down:
    cmds:
      - docker-compose --env-file .env -f dep/docker-compose.yml down
  migrate:
    cmds:
      - migrate -source file://migrations -database "mysql://$MYSQL_USER:$MYSQL_PASSWORD@tcp(localhost:3306)/$MYSQL_DB" up
  docker-up:
    cmds:
      - docker build -t tasker .
      - docker run -p 8080:8080 --name tasker tasker
  docker-down:
    cmds:
      - docker stop tasker && docker rm tasker && docker rmi tasker
  server-up:
    cmds:
      - ./bin/cmd