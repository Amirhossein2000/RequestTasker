version: "3"

dotenv: [".env"]

tasks:
  generate-api:
    desc: Generate API code using OpenAPI generator
    cmds:
      - oapi-codegen -generate types,server,strict-server,spec -package api ./openapi/api.yml > ./internal/app/api/api.gen.go

  generate-mock:
    desc: Generate mock implementations for interfaces in the project
    cmds:
      - go generate ./...

  build:
    desc: Build the project
    cmds:
      - mkdir -p ./bin && go build -o ./bin/ ./cmd/

  test-db:
    desc: Run tests for the database infrastructure package
    cmds:
      - go test -v -count=1 github.com/Amirhossein2000/RequestTasker/internal/infrastructures/mysql

  test-usecase:
    desc: Run tests for the use case package
    cmds:
      - go test -v -count=1 github.com/Amirhossein2000/RequestTasker/internal/app/usecases

  test-kafka:
    desc: Run tests for the Kafka infrastructure package
    cmds:
      - go test -v -count=1 github.com/Amirhossein2000/RequestTasker/internal/infrastructures/kafka

  test-api:
    desc: Run tests for API handlers
    cmds:
      - go test -v -count=1 github.com/Amirhossein2000/RequestTasker/internal/app/api/handlers

  test-tasker:
    desc: Run tests for the tasker service package
    cmds:
      - go test -v -count=1 github.com/Amirhossein2000/RequestTasker/internal/app/services/tasker

  test:
    desc: Run all tests
    cmds:
      - task: test-db
      - task: test-usecase
      - task: test-kafka
      - task: test-api
      - task: test-tasker

  dep-up:
    desc: Set up the project dependencies using Docker Compose
    cmds:
      - docker network create tasker-network
      - docker compose --env-file .env -f dep/docker-compose.yml up -d
      - sleep 10
      - task: migrate

  dep-down:
    desc: Tear down the project dependencies
    cmds:
      - docker-compose --env-file .env -f dep/docker-compose.yml down
      - docker network rm tasker-network

  migrate:
    desc: Run database migrations
    cmds:
      - migrate -source file://migrations -database "mysql://$MYSQL_USER:$MYSQL_PASSWORD@tcp(localhost:3306)/$MYSQL_DB" up

  docker-build:
    desc: Build the tasker Docker image
    cmds:
      - docker build -t tasker .

  docker-up:
    desc: Start the tasker Docker container named
    cmds:
      - docker ps -q --filter "name=tasker" | xargs -r docker stop
      - docker ps -aq --filter "name=tasker" | xargs -r docker rm
      - docker run --env-file .env --env-file ./dep/.env --network tasker-network -p 8080:8080 --name tasker tasker

  docker-down:
    desc: Stop and remove the tasker Docker container
    cmds:
      - docker stop tasker && docker rm tasker && docker rmi tasker

  docker-purge:
    desc: Remove both Docker container and project dependencies
    cmds:
      - task: docker-down
      - task: dep-down

  run:
    desc: Start the server
    cmds:
      - export $(cat .env | xargs) && ./bin/cmd
